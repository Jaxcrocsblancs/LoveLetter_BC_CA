<?php

use Symfony\Component\Routing\RequestContext;
use Symfony\Component\Routing\Exception\RouteNotFoundException;
use Psr\Log\LoggerInterface;

/**
 * appDevUrlGenerator
 *
 * This class has been auto-generated
 * by the Symfony Routing Component.
 */
class appDevUrlGenerator extends Symfony\Component\Routing\Generator\UrlGenerator
{
    private static $declaredRoutes = array(
        '_wdt' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:toolbarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_wdt',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:homeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search_bar' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchBarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search_bar',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_purge' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:purgeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/purge',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_info' => array (  0 =>   array (    0 => 'about',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:infoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'about',    ),    1 =>     array (      0 => 'text',      1 => '/_profiler/info',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_import' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:importAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/import',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_export' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:exportAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '.txt',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler/export',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_phpinfo' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:phpinfoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/phpinfo',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search_results' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchResultsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/search/results',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_router' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.router:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/router',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_exception' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_exception_css' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:cssAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception.css',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_configurator_home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::checkAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_configurator/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_configurator_step' => array (  0 =>   array (    0 => 'index',  ),  1 =>   array (    '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::stepAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'index',    ),    1 =>     array (      0 => 'text',      1 => '/_configurator/step',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_configurator_final' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::finalAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_configurator/final',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'LoveLetter_platform_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LoveLetterPlatformBundle:Advert:index',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/index',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'LoveLetter_platform_accueil' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LoveLetterPlatformBundle:Home:Accueil',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/accueil',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'LoveLetter_platform_add' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LoveLetterPlatformBundle:Home:add',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/add',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'LoveLetter_platform_AffichageJeu' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LoveLetter\\PlatformBundle\\Controller\\PartieController::AffichageJeuAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/Partie',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'LoveLetter_platform_initialisation' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LoveLetter\\PlatformBundle\\Controller\\CarteController::RemplisageTableCarteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/Initialisation',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'LoveLetter_platform_UtilisateurCreerPartie' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LoveLetter\\PlatformBundle\\Controller\\PartieController::UtilisateurCreerPartieAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/UtilisateurCreerPartie',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'LoveLetter_platform_UtilisateurRejoinsPartie' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LoveLetter\\PlatformBundle\\Controller\\PartieController::UtilisateurRejoinsPartieAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/UtilisateurRejoinsPartie',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'LoveLetter_platform_CreationPartie' => array (  0 =>   array (    0 => 'nom',    1 => 'nb',  ),  1 =>   array (    '_controller' => 'LoveLetter\\PlatformBundle\\Controller\\PartieController::CreationPartieAction',  ),  2 =>   array (    'nb' => '2|3|4',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '2|3|4',      3 => 'nb',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'nom',    ),    2 =>     array (      0 => 'text',      1 => '/LancementPartie',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'LoveLetter_platform_DebutManche' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LoveLetter\\PlatformBundle\\Controller\\PartieController::DebutMancheAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/DebutManche',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'LoveLetter_platform_DistributionCarte' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LoveLetter\\PlatformBundle\\Controller\\PartieController::DistributionCarteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/DistributionCarte',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'LoveLetter_platform_TirerCarte' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LoveLetter\\PlatformBundle\\Controller\\PartieController::TirerCarteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/TirerCarte',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'LoveLetter_platform_Choix' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LoveLetter\\PlatformBundle\\Controller\\CarteController::ChoixAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/Choix',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'LoveLetter_platform_Garde' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LoveLetter\\PlatformBundle\\Controller\\CarteController::GardeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/Garde',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'LoveLetter_platform_GardeChoix' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LoveLetter\\PlatformBundle\\Controller\\CarteController::GardeChoixAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/GardeChoix',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'LoveLetter_platform_GardeChoix2' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LoveLetter\\PlatformBundle\\Controller\\CarteController::GardeChoix2Action',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/GardeChoix2',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'LoveLetter_platform_Pretre' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LoveLetter\\PlatformBundle\\Controller\\CarteController::PretreAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/Pretre',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'LoveLetter_platform_PretreChoix' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LoveLetter\\PlatformBundle\\Controller\\CarteController::PretreChoixAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/PretreChoix',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'LoveLetter_platform_Baron' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LoveLetter\\PlatformBundle\\Controller\\CarteController::BaronAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/Baron',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'LoveLetter_platform_BaronChoix' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LoveLetter\\PlatformBundle\\Controller\\CarteController::BaronChoixAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/BaronChoix',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'LoveLetter_platform_Servante' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LoveLetter\\PlatformBundle\\Controller\\CarteController::ServanteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/Servante',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'LoveLetter_platform_Prince' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LoveLetter\\PlatformBundle\\Controller\\CarteController::PrinceAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/Prince',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'LoveLetter_platform_PrinceChoix' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LoveLetter\\PlatformBundle\\Controller\\CarteController::PrinceChoixAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/PrinceChoix',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'LoveLetter_platform_Roi' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LoveLetter\\PlatformBundle\\Controller\\CarteController::RoiAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/Roi',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'LoveLetter_platform_RoiChoix' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LoveLetter\\PlatformBundle\\Controller\\CarteController::RoiChoixAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/RoiChoix',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'LoveLetter_platform_Comtesse' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LoveLetter\\PlatformBundle\\Controller\\CarteController::ComtesseAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/Comtesse',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'LoveLetter_platform_Princesse' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LoveLetter\\PlatformBundle\\Controller\\CarteController::PrincesseAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/Princesse',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'LoveLetter_platform_TestFin' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LoveLetter\\PlatformBundle\\Controller\\PartieController::TestFinAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/TestFin',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'LoveLetter_platform_TestFinPartie' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'LoveLetter\\PlatformBundle\\Controller\\PartieController::TestFinPartieAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/TestFinPartie',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_welcome' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Acme\\DemoBundle\\Controller\\WelcomeController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_demo_login' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Acme\\DemoBundle\\Controller\\SecuredController::loginAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/demo/secured/login',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_demo_security_check' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Acme\\DemoBundle\\Controller\\SecuredController::securityCheckAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/demo/secured/login_check',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_demo_logout' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Acme\\DemoBundle\\Controller\\SecuredController::logoutAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/demo/secured/logout',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'acme_demo_secured_hello' => array (  0 =>   array (  ),  1 =>   array (    'name' => 'World',    '_controller' => 'Acme\\DemoBundle\\Controller\\SecuredController::helloAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/demo/secured/hello',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_demo_secured_hello' => array (  0 =>   array (    0 => 'name',  ),  1 =>   array (    '_controller' => 'Acme\\DemoBundle\\Controller\\SecuredController::helloAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'name',    ),    1 =>     array (      0 => 'text',      1 => '/demo/secured/hello',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_demo_secured_hello_admin' => array (  0 =>   array (    0 => 'name',  ),  1 =>   array (    '_controller' => 'Acme\\DemoBundle\\Controller\\SecuredController::helloadminAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'name',    ),    1 =>     array (      0 => 'text',      1 => '/demo/secured/hello/admin',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_demo' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Acme\\DemoBundle\\Controller\\DemoController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/demo/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_demo_hello' => array (  0 =>   array (    0 => 'name',  ),  1 =>   array (    '_controller' => 'Acme\\DemoBundle\\Controller\\DemoController::helloAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'name',    ),    1 =>     array (      0 => 'text',      1 => '/demo/hello',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_demo_contact' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Acme\\DemoBundle\\Controller\\DemoController::contactAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/demo/contact',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
    );

    /**
     * Constructor.
     */
    public function __construct(RequestContext $context, LoggerInterface $logger = null)
    {
        $this->context = $context;
        $this->logger = $logger;
    }

    public function generate($name, $parameters = array(), $referenceType = self::ABSOLUTE_PATH)
    {
        if (!isset(self::$declaredRoutes[$name])) {
            throw new RouteNotFoundException(sprintf('Unable to generate a URL for the named route "%s" as such route does not exist.', $name));
        }

        list($variables, $defaults, $requirements, $tokens, $hostTokens, $requiredSchemes) = self::$declaredRoutes[$name];

        return $this->doGenerate($variables, $defaults, $requirements, $tokens, $parameters, $name, $referenceType, $hostTokens, $requiredSchemes);
    }
}
